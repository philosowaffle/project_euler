
using FluentAssertions;
using NUnit.Framework;

namespace ProjectEulerProblems
{
	/// <summary>
	/// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
	/// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89,...
	/// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
	/// </summary>
	public class Problem02 : BaseTest
	{
		private const int Solution = 4613732;
		private const int MaxValue = 4_000_000;
		private const int Divisor = 2;

		[Test]
		public void Solution01()
		{
			var answer = 0;

			var previousNum = 1;
			var currentNum = 2;
			while (currentNum < MaxValue)
			{
				if (currentNum % Divisor == 0)
					answer += currentNum;

				var nextNum = previousNum + currentNum;
				previousNum = currentNum;
				currentNum = nextNum;
			}

			answer.Should().Be(Solution);
		}
	}
}
