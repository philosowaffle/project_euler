import java.util.ArrayList;
import java.util.List;

/**
 * Project Euler - Problem 12
 * The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number
 * would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
 * 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
 * Let us list the factors of the first seven triangle numbers:
 * 1: 1
 * 3: 1,3
 * 6: 1,2,3,6
 * 10: 1,2,5,10
 * 15: 1,3,5,15
 * 21: 1,3,7,21
 * 28: 1,2,4,7,14,28
 * We can see that 28 is the first triangle number to have over five divisors.
 * What is the value of the first triangle number to have over five hundred divisors?
 *
 * @author Bailey Belvis
 */
public class Problem12
{
	private final static long solution = 76576500;

	/**
	 * Main
	 *
	 * @param args
	 *        arg!
	 */
	public static void main(final String[] args)
	{
		// Solution 1
		solutionOne();
	}

	/**
	 * Solution One
	 */
	static void solutionOne()
	{
		long answer = 0;
		long counter = 0;
		final List<Long> factors = new ArrayList<>();

		while (factors.size() <= 500) {
			factors.clear();

			// calculate triangle number
			for (int x = 0; x < counter; x++) {
				answer += 1;
			}

			// check number of factors
			for (long x = 1; x <= (answer / 2); x++) {
				if ((answer % x) == 0) {

					factors.add(x);
					factors.add(answer / x);

					if ((factors.size() > 500) || (factors.get((factors.size() - 1)) <= x)) {
						break;
					}
				}
			}

			counter++;

		}

		print(answer);
	}

	/**
	 * Prints a value.
	 *
	 * @param value
	 *        int
	 */
	static void print(final long value)
	{
		if (value == solution) {
			System.out.println("Correct: " + value); //$NON-NLS-1$
		}
		else {
			System.out.println("Incorrect: " + value); //$NON-NLS-1$
		}

	}

}
